name: Python app

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/build-python.yaml'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt
        working-directory: app_python
      
      # Testing using unittest
      - name: Run tests
        run: python -m unittest app_python/test.py

      # Linting using Pylint
      - name: Linter
        run: pylint app_python
        continue-on-error: true
  
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt
        working-directory: app_python

      # Download and install Snyk
      - name: Download and cache Snyk binary
        id: cache-snyk
        run: |
          curl -LO https://github.com/snyk/cli/releases/download/v1.1278.0/snyk-linux
          chmod +x snyk-linux
          echo "::set-output name=path::snyk-linux"
        working-directory: app_python 
      - uses: actions/cache@v3
        with:
          path: ${{ steps.cache-snyk.outputs.path }}
          key: ${{ runner.os }}-snyk-${{ hashFiles('app_python/snyk-linux') }}
          restore-keys: |
            ${{ runner.os }}-snyk-
      
      # Run Snyk
      - name: Run Snyk
        run: ./snyk-linux test --severity-threshold=high
        working-directory: app_python
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs:
      - security
      - build
    if: ${{ needs.security.result == 'success' && needs.build.result == 'success'}}
    steps:
      - uses: actions/checkout@v4
      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Build and push the image
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app_python
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app_python:latest