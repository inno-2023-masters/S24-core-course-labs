name: app_python

on:
  push:
    paths:
      - app_python/**
      - .github/workflows/app_python.yaml

jobs:
  ensure-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app_python
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run linter
        run: |
          pip install flake8
          flake8 .
      - name: Run tests
        run: |
          pip install pytest
          pytest
          
  ensure-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          cd app_python
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args:
            -snyk
            -test app_python --skip-unresolved 

  docker:
    runs-on: ubuntu-latest
    needs: ['ensure-quality', 'ensure-security']
    defaults:
      run:
        working-directory: ./app_python
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app_python
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/moscow-time:latest
          
