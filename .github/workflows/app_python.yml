name: app_python
on: 
    push:
        paths:
            - 'app_python/**'
            - '.github/workflows/app_python.yml'
    pull_request:
        paths:
            - 'app_python/**'
            - '.github/workflows/app_python.yml'

env:
    IMAGE_NAME: ahmadalhussin/app_python

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up python
              uses: actions/setup-python@v4
              with:
                python-version: '3.8'
            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                    ${{ runner.os }}-pip-
            - name: Install dependencies
              working-directory: ./app_python
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            - name: Running unit tests
              working-directory: ./app_python
              run: |
                pip install pytest
                pytest
            - name: Lint with Ruff
              working-directory: ./app_python
              run: |
                pip install ruff
                ruff --output-format=github .
    
    security:
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - name: Run Snyk to check for vulnerabilities
              uses: snyk/actions/python-3.8@master
              with:
                args: --skip-unresolved app_python/
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


    docker:
        needs: [build, security]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          working-directory: ./app_python
          run: | 
            docker build -t ahmadalhussin/app_python:latest .
            docker tag ahmadalhussin/app_python:latest ahmadalhussin/app_python:latest
            docker push ahmadalhussin/app_python:latest

