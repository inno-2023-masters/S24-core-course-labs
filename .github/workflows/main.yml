name: Python Application CI

on:
  push:
    paths:
      - "app_python/**"

jobs:
  setup_environment:
    runs-on: ubuntu-latest
    timeout-minutes:  3
    steps:
    - name: Repository Checkout
      uses: actions/checkout@v2

    - name: Python Setup
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Dependency Installation
      run: |
        python -m pip install --upgrade pip
        pip install -r app_python/requirements.txt

    - name: Python Dependency Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Test Execution
      run: |
        pip install pytest
        pytest app_python/test_app.py

  linter:
    needs: setup_environment
    runs-on: ubuntu-latest
    timeout-minutes:  3
    steps:
    - name: Repository Checkout
      uses: actions/checkout@v2

    - name: Python Setup
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Dependency Installation
      run: |
        python -m pip install --upgrade pip
        pip install -r app_python/requirements.txt

    - name: Code Linting
      run: |
        pip install flake8
        flake8 app_python/app.py

  security_audit:
    needs: setup_environment
    runs-on: ubuntu-latest
    timeout-minutes:  3
    steps:
      - name: Snyk Vulnerability Scan
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker_image_build:
    needs:
      - setup_environment
      - security_audit
      - linter
    runs-on: ubuntu-latest
    timeout-minutes:  3
    steps:
    - name: Docker Hub Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Image Creation
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest ./app_python

    - name: Docker Image Push
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest
