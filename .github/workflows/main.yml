name: app python

on:
  push:
    paths:
      - "app_python/**"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes:   2
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app_python/requirements.txt

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Run pytest
      run: |
        pip install pytest
        pytest app_python/test_app.py

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 app_python/app.py

  security:
    needs: build
    timeout-minutes:   3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Snyk vulnerability scan
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    needs:
      - build
      - security
    runs-on: ubuntu-latest
    timeout-minutes:   4
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest ./app_python

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest
