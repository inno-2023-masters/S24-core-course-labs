name: Build app_java

on:
  push:
    paths:
    - 'app_java/**'
    - '.github/workflows/app_java.yaml'
  pull_request:
    paths:
    - 'app_java/**'
    - '.github/workflows/app_java.yaml'

jobs:
  lint:
    timeout-minutes: 2
    name: Run Google linter
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--skip-sorting-imports --replace"

  test:
    timeout-minutes: 2
    defaults:
      run:
        working-directory: app_java
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
      - name: Build with Maven
        run: mvn test

  snyk_check:
    needs: [lint, test]
    timeout-minutes: 5

    name: Run SNYK
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        with:
          args: --skip-unresolved app_java/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build_push:
    timeout-minutes: 10
    defaults:
      run:
        working-directory: app_java
    needs: [lint, test, snyk_check]
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push to the dockerhub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/app_java:latest"
          context: "{{defaultContext}}:app_java"
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/app_java:latest
          cache-to: type=inline
